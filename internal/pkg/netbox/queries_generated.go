// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package netbox

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// GetAllTypesResponse is returned by GetAllTypes on success.
type GetAllTypesResponse struct {
	Schema GetAllTypesSchema `json:"__schema"`
}

// GetSchema returns GetAllTypesResponse.Schema, and is useful for accessing the field via an interface.
func (v *GetAllTypesResponse) GetSchema() GetAllTypesSchema { return v.Schema }

// GetAllTypesSchema includes the requested fields of the GraphQL type __Schema.
type GetAllTypesSchema struct {
	Types []GetAllTypesSchemaTypesType `json:"types"`
}

// GetTypes returns GetAllTypesSchema.Types, and is useful for accessing the field via an interface.
func (v *GetAllTypesSchema) GetTypes() []GetAllTypesSchemaTypesType { return v.Types }

// GetAllTypesSchemaTypesType includes the requested fields of the GraphQL type __Type.
type GetAllTypesSchemaTypesType struct {
	Name string `json:"name"`
}

// GetName returns GetAllTypesSchemaTypesType.Name, and is useful for accessing the field via an interface.
func (v *GetAllTypesSchemaTypesType) GetName() string { return v.Name }

// GetTypeInfoResponse is returned by GetTypeInfo on success.
type GetTypeInfoResponse struct {
	Type GetTypeInfoType `json:"__type"`
}

// GetType returns GetTypeInfoResponse.Type, and is useful for accessing the field via an interface.
func (v *GetTypeInfoResponse) GetType() GetTypeInfoType { return v.Type }

// GetTypeInfoType includes the requested fields of the GraphQL type __Type.
type GetTypeInfoType struct {
	Name   string                       `json:"name"`
	Fields []GetTypeInfoTypeFieldsField `json:"fields"`
}

// GetName returns GetTypeInfoType.Name, and is useful for accessing the field via an interface.
func (v *GetTypeInfoType) GetName() string { return v.Name }

// GetFields returns GetTypeInfoType.Fields, and is useful for accessing the field via an interface.
func (v *GetTypeInfoType) GetFields() []GetTypeInfoTypeFieldsField { return v.Fields }

// GetTypeInfoTypeFieldsField includes the requested fields of the GraphQL type __Field.
type GetTypeInfoTypeFieldsField struct {
	Name string                         `json:"name"`
	Type GetTypeInfoTypeFieldsFieldType `json:"type"`
}

// GetName returns GetTypeInfoTypeFieldsField.Name, and is useful for accessing the field via an interface.
func (v *GetTypeInfoTypeFieldsField) GetName() string { return v.Name }

// GetType returns GetTypeInfoTypeFieldsField.Type, and is useful for accessing the field via an interface.
func (v *GetTypeInfoTypeFieldsField) GetType() GetTypeInfoTypeFieldsFieldType { return v.Type }

// GetTypeInfoTypeFieldsFieldType includes the requested fields of the GraphQL type __Type.
type GetTypeInfoTypeFieldsFieldType struct {
	Name   string                               `json:"name"`
	Kind   TypeKind                             `json:"kind"`
	OfType GetTypeInfoTypeFieldsFieldTypeOfType `json:"ofType"`
}

// GetName returns GetTypeInfoTypeFieldsFieldType.Name, and is useful for accessing the field via an interface.
func (v *GetTypeInfoTypeFieldsFieldType) GetName() string { return v.Name }

// GetKind returns GetTypeInfoTypeFieldsFieldType.Kind, and is useful for accessing the field via an interface.
func (v *GetTypeInfoTypeFieldsFieldType) GetKind() TypeKind { return v.Kind }

// GetOfType returns GetTypeInfoTypeFieldsFieldType.OfType, and is useful for accessing the field via an interface.
func (v *GetTypeInfoTypeFieldsFieldType) GetOfType() GetTypeInfoTypeFieldsFieldTypeOfType {
	return v.OfType
}

// GetTypeInfoTypeFieldsFieldTypeOfType includes the requested fields of the GraphQL type __Type.
type GetTypeInfoTypeFieldsFieldTypeOfType struct {
	Name string   `json:"name"`
	Kind TypeKind `json:"kind"`
}

// GetName returns GetTypeInfoTypeFieldsFieldTypeOfType.Name, and is useful for accessing the field via an interface.
func (v *GetTypeInfoTypeFieldsFieldTypeOfType) GetName() string { return v.Name }

// GetKind returns GetTypeInfoTypeFieldsFieldTypeOfType.Kind, and is useful for accessing the field via an interface.
func (v *GetTypeInfoTypeFieldsFieldTypeOfType) GetKind() TypeKind { return v.Kind }

type TypeKind string

const (
	TypeKindScalar      TypeKind = "SCALAR"
	TypeKindObject      TypeKind = "OBJECT"
	TypeKindInterface   TypeKind = "INTERFACE"
	TypeKindUnion       TypeKind = "UNION"
	TypeKindEnum        TypeKind = "ENUM"
	TypeKindInputObject TypeKind = "INPUT_OBJECT"
	TypeKindList        TypeKind = "LIST"
	TypeKindNonNull     TypeKind = "NON_NULL"
)

// The query or mutation executed by GetAllTypes.
const GetAllTypes_Operation = `
query GetAllTypes {
	__schema {
		types {
			name
		}
	}
}
`

func GetAllTypes(
	ctx context.Context,
	client graphql.Client,
) (*GetAllTypesResponse, error) {
	req := &graphql.Request{
		OpName: "GetAllTypes",
		Query:  GetAllTypes_Operation,
	}
	var err error

	var data GetAllTypesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetTypeInfo.
const GetTypeInfo_Operation = `
query GetTypeInfo {
	__type(name: "IPAddressType") {
		name
		fields {
			name
			type {
				name
				kind
				ofType {
					name
					kind
				}
			}
		}
	}
}
`

func GetTypeInfo(
	ctx context.Context,
	client graphql.Client,
) (*GetTypeInfoResponse, error) {
	req := &graphql.Request{
		OpName: "GetTypeInfo",
		Query:  GetTypeInfo_Operation,
	}
	var err error

	var data GetTypeInfoResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
